function generateMindMap() {
Â  const input = document.getElementById("inputText").value;
Â  const ideas = input.split("\n").filter(Boolean);
Â  const tree = buildTree(ideas);
Â  const diagram = treeToMermaid(tree);

Â  const mindmapDiv = document.getElementById("mindmap");
Â  mindmapDiv.innerHTML = ""; // ðŸ§¼ Clear previous diagram
Â  mindmapDiv.innerHTML = `<pre class="mermaid">${diagram}</pre>`;

Â  mermaid.run(); // âœ… Works with Mermaid v10.4.0
Â  updateSummary(tree);
}

function buildTree(lines) {
Â  const root = { text: "Main Idea", children: [] };
Â  lines.forEach(line => {
Â  Â  const node = { text: line.trim(), children: [] };
Â  Â  root.children.push(node);
Â  });
Â  return root;
}

function treeToMermaid(node, parent = null, id = "A", links = []) {
Â  const thisId = id;
Â  if (parent) {
Â  Â  links.push(`${parent}["${escapeText(parent)}"] --> ${thisId}["${escapeText(node.text)}"]`);
Â  } else {
Â  Â  links.push(`${thisId}["${escapeText(node.text)}"]`);
Â  }
Â  node.children.forEach((child, idx) =>
Â  Â  treeToMermaid(child, node.text, thisId + String.fromCharCode(66 + idx), links)
Â  );
Â  return "graph TD\n" + links.join("\n");
}

function escapeText(text) {
Â  return text.replace(/"/g, '&quot;').replace(/'/g, "&apos;");
}

function updateSummary(tree) {
Â  const list = document.getElementById("summaryList");
Â  list.innerHTML = "";
Â  tree.children.forEach(item => {
Â  Â  const li = document.createElement("li");
Â  Â  li.textContent = item.text;
Â  Â  list.appendChild(li);
Â  });
}

function toggleTheme() {
Â  document.body.classList.toggle("dark");
}

function downloadPNG() {
Â  html2canvas(document.querySelector("#mindmap")).then(canvas => {
Â  Â  const link = document.createElement("a");
Â  Â  link.download = "mindmap.png";
Â  Â  link.href = canvas.toDataURL();
Â  Â  link.click();
Â  });
}
